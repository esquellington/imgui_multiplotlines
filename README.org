#+STARTUP: indent
* imgui_multiplotlines

ImGui::MultiPlotLines() is a nearly drop-in alternative to
ImGui::PlotLines() that allows drawing multiple channels
simultaneously and adds some nice extra features on top.

#+html: <p align="center"><img src="mpl_default_with_legend.png" width="500" alt="Plot + Legend"/></p>

* Features

Draw N channels simultaneously in separate Plot and Legend views.

Channels:
- Can have a user-defined name and colour
- Can be shown/hidden interactively
- Can be highlighted and selected

Plot View:
- Draws N channel curves simultaneously in their respective colours
- Channel curves can be hovered and clicked for custom interaction
- Can filter curves to smoothen noisy input data

Legend View:
- Shows channel names and status (visible,hovered,selected...)
- Channel names can be hovered and clicked for custom interaction
- Can be shown/hidden interactively

#+html: <p align="center"><img src="images/mpl_demo.gif" width="500" alt="MultiPlotLines_Demo()"/></p>

* Installation

Install /boost/ and... :scream: ... no, really, just copy
imgui_multiplotlines.h/cpp to your project folders or your ImGui
installation and you're good to go :rocket:

NOTE: Compilation requires C++11 due to some lightweight use of
non-capturing lambdas and a few harmless autos and inline struct
member initializations that could be avoided at the cost of much
uglier code.

* Guide

See ImGui::MultiPlotLines_Demo() for example code showing how to use most available features.

Basic usage is similar to ImGui::PlotLines(), and only requires the following changes:
- Providing a get_value() function pointer that accepts and additional channel_idx parameter
- Providing the number of channels

#+BEGIN_SRC cpp
void MultiPlotLines( const char* label,
                     float (*get_value)(void* data, int value_idx, int channel_idx),
                     void* data,
                     int num_values,
                     int num_channels,
                     // Default params
                     struct MultiPlotLines_Params* params = nullptr,
                     float scale_min = FLT_MAX,
                     float scale_max = FLT_MAX,
                     ImVec2 graph_size = ImVec2(0, 0) );
#+END_SRC

Advanced usage requires passing an non-null ImGui::MultiPlotLines_Params
struct pointer, that can be persistent or non-persistent.

Non-persistent params allow fine-tuning the Plot/Legend appearance and
enable some minimal interaction:
- Enable/Disable per-channel visibility
- Enable Legend and other UI elements
- Filter channel data
- RW_HoveredChannelIdx and RW_SelectedChannelIdx can be queried after
  drawing, but will be reset on next call

Persistent params allow tracking and interactive modification of
read-write parameters (prefixed by RW_):
- Toggle channel visibility
- Toggle channel selection
- Hide/Show Legend interactively
- Highlight Plot channels when hovering over Legend entries (with
  non-persistent params, hovered Plot channels will be highlghted in
  Legend, but not the other way around)

* Details
** Channel colours
The default palette is nice enough for dark backgrounds and contains
16 different colours that are reused if there's more than 16
channels. Users can provide a get_channel_color() function to
customize these at will.
** MouseClickActions
Default mouse button actions are setup to select (left) and hide/show
(right) channels. Users can customize the action executed on
left,right,middle click on a hovered channel by fiddling with the
MultiPlotLines_Params struct.
** Limitations
- All plots use the same vertical range
- All channels are assumed to have the same number of samples (horizontal range)
- No support for values_offset or overlay_text, available in ImGui::PlotLines()
User-defined get_value() functions can easily work around these, but
I've tried to keep the API and default behaviour as simple as possible.
** Potential improvements
- Legend could be optionally placed beside/above Plot, instead of below
- Plot axis labels and ticks marks
- Plot navigation with zoom, pan, selection
- Alternative Legend view that shows channels as a collapsable
  hierarchy instead of a flat column-based layout
- Generic MouseClickAction that opens a context menu with all available actions
- User-defined MouseClickAction that calls a user-provided function pointer
* See also
- [[https://github.com/ocornut/imgui/][Dear ImGui]]
- [[https://github.com/epezent/implot][ImPlot]] An advanced 2D Plotting for Dear ImGui
- [[https://github.com/soulthreads/imgui-plot][imgui-plot]] An improved plot widget aimed at displaying audio data
