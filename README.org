#+STARTUP: indent
* imgui_multiplotlines

~ImGui::MultiPlotLines()~ is a nearly drop-in alternative to vanilla
~ImGui::PlotLines()~ in [[Dear ImGui]] that allows drawing multiple channels
simultaneously and adds some nice extra features on top.

#+html: <p align="center"><img src="images/mpl_default_with_legend.png" width="500" title"Plot + Legend"/></p>

* Features

Draw N channels simultaneously in separate Plot and Legend views.

Channels:
- Can have a user-defined name and color
- Can be shown/hidden interactively
- Can be highlighted and selected

Plot View:
- Draws channel curves simultaneously using their respective colors
- Channel curves can be hovered and clicked for custom interaction
- Can filter curves to smoothen noisy input data

Legend View:
- Shows channel names and status (visible,hovered,selected...)
- Channel names can be hovered and clicked for custom interaction
- Can be shown/hidden interactively

#+html: <p align="center"><img src="images/mpl_demo.gif" width="500" title="MultiPlotLines_Demo()"/></p>

* Installation

Install /boost/ and... :scream: ... no, really, just copy
[[file:imgui_multiplotlines.h]] and [[file:imgui_multiplotlines.cpp]] to your
project folders or your ImGui installation and you're good to
go :rocket:

NOTE: Compilation requires C++11 due to some lightweight use of
non-capturing lambdas and a few harmless autos and inline struct
member initializations that could be avoided at the cost of much
uglier code.

* Guide

Basic usage is similar to ~ImGui::PlotLines()~ and only requires the following changes:
- Providing a ~get_value()~ function pointer that accepts and additional ~channel_idx~ parameter
- Providing the number of channels

#+BEGIN_SRC cpp
  void MultiPlotLines( const char* label,
                       float (*get_value)(void* data, int value_idx, int channel_idx),
                       void* data,
                       int num_values,
                       int num_channels,
                       // Default params
                       struct MultiPlotLines_Params* params = nullptr,
                       float scale_min = FLT_MAX,
                       float scale_max = FLT_MAX,
                       ImVec2 graph_size = ImVec2(0, 0) );
#+END_SRC

Enabling additional features requires passing an non-null
~ImGui::MultiPlotLines_Params~ struct pointer, please read the struct
comments in [[file:imgui_multiplotlines.h]] for specific details. The user-owned
Params struct can be non-persistent or persistent across plot calls.

Non-persistent params are reset before each ~ImGui::MultiPlotLines()~
call, and allow fine-tuning the Plot/Legend appearance and enable some
minimal interaction:
- Enable Legend
- Customize per-channel name, color and visibility
- Change plot line thickness and data filtering factor
- Query ~RW_HoveredChannelIdx~ and ~RW_SelectedChannelIdx~ right after
  the call returns.

The minimal setup to enable the Legend feature would be:
#+BEGIN_SRC cpp
  ImGui::MultiPlotLines_Params params;
  params.ShowLegend = true;
  ImGui::MultiPlotLines( label, get_value, data, num_values, num_channels, &params );
#+END_SRC

Persistent params allow keeping track of interactive modification of
read-write values (prefixed by RW_) across multiple calls:
- Hide/Show Legend interactively
- Toggle channel visibility interactively
- Toggle channel selection interactively
- Keep selection active until explicitly modified
- Highlight Plot channels when hovering over Legend entries

See ~ImGui::MultiPlotLines_Demo()~ in [[file:imgui_multiplotlines_demo.h]]
for example code showing how to use most available features, and
~ImGui::MultiPlotLines_Params~ struct comments in [[file:imgui_multiplotlines.h]].

* Details
** Channel colors
The default palette is nice enough for dark backgrounds and contains
16 different colors that are reused if there's more than 16
channels. Users can provide a ~get_channel_color()~ function to
customize these at will.
** MouseClickActions
Default mouse button actions are setup to select (left) and hide/show
(right) channels. Users can customize the action executed on
left,right,middle click on a hovered channel by fiddling with the
~ImGui::MultiPlotLines_Params~ struct.
** Limitations
- All plots use the same vertical range
- All channels are assumed to have the same number of samples (horizontal range)
- No support for values_offset or overlay_text present in ~ImGui::PlotLines()~
User-defined ~get_value()~ functions can easily work around these, but
I've tried to keep the API and default behaviour as simple as possible.
** Potential improvements
- Legend could be optionally placed beside/above Plot, instead of below
- Plot axis labels and ticks marks
- Plot navigation with zoom, pan, selection
- Alternative Legend view that shows channels as a collapsable
  hierarchy instead of a flat column-based layout
- Generic MouseClickAction that opens a context menu with all available actions
- User-defined MouseClickAction that calls a user-provided function pointer

* Motivation

In realtime apps there's many use cases for drawing multiple plots
simultaneously, and the default functionality in [[https://github.com/ocornut/imgui/][Dear ImGui]] is quite
limited. There's a some pretty advanced alternatives, but I felt that
a simple alternative to ~ImGui::PlotLines()~ was still missing.

The main reason I ended up writing this was plain and simple
procrastination. I spent roughly 1 week trying to convince myself not
to do it while constantly wanting to, and then roughly another week
actually doing it.

There's no real plan for new features, the /Potential improvements/
above may never happen, as the core idea is to keep it simple, but I
foresee some bug-fixing and minor changes in the near future.

* See also
- [[https://github.com/ocornut/imgui/][Dear ImGui]]
- [[https://github.com/epezent/implot][ImPlot]] An advanced 2D Plotting for Dear ImGui
- [[https://github.com/soulthreads/imgui-plot][imgui-plot]] An improved plot widget aimed at displaying audio data
